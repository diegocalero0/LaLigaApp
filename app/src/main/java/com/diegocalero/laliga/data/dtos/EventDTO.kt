package com.diegocalero.laliga.data.dtos

import com.diegocalero.laliga.models.EventModel
import com.squareup.moshi.Json

data class EventDTO (

	@field:Json(name = "idEvent") val idEvent : Int?,
	@field:Json(name = "idSoccerXML") val idSoccerXML : String?,
	@field:Json(name = "idAPIfootball") val idAPIfootball : Int?,
	@field:Json(name = "strEvent") val strEvent : String?,
	@field:Json(name = "strEventAlternate") val strEventAlternate : String?,
	@field:Json(name = "strFilename") val strFilename : String?,
	@field:Json(name = "strSport") val strSport : String?,
	@field:Json(name = "idLeague") val idLeague : Int?,
	@field:Json(name = "strLeague") val strLeague : String?,
	@field:Json(name = "strSeason") val strSeason : String?,
	@field:Json(name = "strDescriptionEN") val strDescriptionEN : String?,
	@field:Json(name = "strHomeTeam") val strHomeTeam : String?,
	@field:Json(name = "strAwayTeam") val strAwayTeam : String?,
	@field:Json(name = "intHomeScore") val intHomeScore : Int?,
	@field:Json(name = "intRound") val intRound : Int?,
	@field:Json(name = "intAwayScore") val intAwayScore : Int?,
	@field:Json(name = "intSpectators") val intSpectators : String?,
	@field:Json(name = "strOfficial") val strOfficial : String?,
	@field:Json(name = "strHomeGoalDetails") val strHomeGoalDetails : String?,
	@field:Json(name = "strHomeRedCards") val strHomeRedCards : String?,
	@field:Json(name = "strHomeYellowCards") val strHomeYellowCards : String?,
	@field:Json(name = "strHomeLineupGoalkeeper") val strHomeLineupGoalkeeper : String?,
	@field:Json(name = "strHomeLineupDefense") val strHomeLineupDefense : String?,
	@field:Json(name = "strHomeLineupMidfield") val strHomeLineupMidfield : String?,
	@field:Json(name = "strHomeLineupForward") val strHomeLineupForward : String?,
	@field:Json(name = "strHomeLineupSubstitutes") val strHomeLineupSubstitutes : String?,
	@field:Json(name = "strHomeFormation") val strHomeFormation : String?,
	@field:Json(name = "strAwayRedCards") val strAwayRedCards : String?,
	@field:Json(name = "strAwayYellowCards") val strAwayYellowCards : String?,
	@field:Json(name = "strAwayGoalDetails") val strAwayGoalDetails : String?,
	@field:Json(name = "strAwayLineupGoalkeeper") val strAwayLineupGoalkeeper : String?,
	@field:Json(name = "strAwayLineupDefense") val strAwayLineupDefense : String?,
	@field:Json(name = "strAwayLineupMidfield") val strAwayLineupMidfield : String?,
	@field:Json(name = "strAwayLineupForward") val strAwayLineupForward : String?,
	@field:Json(name = "strAwayLineupSubstitutes") val strAwayLineupSubstitutes : String?,
	@field:Json(name = "strAwayFormation") val strAwayFormation : String?,
	@field:Json(name = "intHomeShots") val intHomeShots : String?,
	@field:Json(name = "intAwayShots") val intAwayShots : String?,
	@field:Json(name = "strTimestamp") val strTimestamp : String?,
	@field:Json(name = "dateEvent") val dateEvent : String?,
	@field:Json(name = "dateEventLocal") val dateEventLocal : String?,
	@field:Json(name = "strTime") val strTime : String?,
	@field:Json(name = "strTimeLocal") val strTimeLocal : String?,
	@field:Json(name = "strTVStation") val strTVStation : String?,
	@field:Json(name = "idHomeTeam") val idHomeTeam : Int?,
	@field:Json(name = "idAwayTeam") val idAwayTeam : Int?,
	@field:Json(name = "strResult") val strResult : String?,
	@field:Json(name = "strVenue") val strVenue : String?,
	@field:Json(name = "strCountry") val strCountry : String?,
	@field:Json(name = "strCity") val strCity : String?,
	@field:Json(name = "strPoster") val strPoster : String?,
	@field:Json(name = "strSquare") val strSquare : String?,
	@field:Json(name = "strFanart") val strFanart : String?,
	@field:Json(name = "strThumb") val strThumb : String?,
	@field:Json(name = "strBanner") val strBanner : String?,
	@field:Json(name = "strMap") val strMap : String?,
	@field:Json(name = "strTweet1") val strTweet1 : String?,
	@field:Json(name = "strTweet2") val strTweet2 : String?,
	@field:Json(name = "strTweet3") val strTweet3 : String?,
	@field:Json(name = "strVideo") val strVideo : String?,
	@field:Json(name = "strStatus") val strStatus : String?,
	@field:Json(name = "strPostponed") val strPostponed : String?,
	@field:Json(name = "strLocked") val strLocked : String?
)

fun EventDTO.toEventModel() = EventModel(
	idEvent = idEvent,
	strEvent = strEvent,
	strLeague = strLeague,
	strSeason = strSeason,
	strHomeTeam = strHomeTeam,
	strAwayTeam = strAwayTeam,
	strTimestamp = strTimestamp,
	intHomeScore = intHomeScore,
	intAwayScore = intAwayScore,
	strThumb = strThumb,
	dateEvent = dateEvent,
	strTime = strTime
)